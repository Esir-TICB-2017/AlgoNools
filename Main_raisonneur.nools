//	*******************************************************************
//
//	Fichier comportant toutes les règles destinées au raisonneur
//
//	*******************************************************************


import("./Functions.js");
import("./Objets.js");



//	===================================================================
//	Règles pour gérer la luminosité
//		->	augLum1 et augLum2 pour l'augmenter
//		->	dimLum1 et dimLum2 pour diminuer
//	===================================================================
rule augLum1 {
	when {
		consigne: Consigne;
		capLum  : CaptLuminosite capLum.getPlace() == 'interieur' && capLum.getValue() < (consigne.lum - 25);
		volet   : Volet volet.getValue() == 100;
		lum     : Lumiere lum.getValue() < 100;		
	}
	then {
		modify(lum, lum.setUp());
		afficher("rule augLum1 : lum value = " + lum.getValue());
	}
}
rule augLum2 {
	when {
		consigne : Consigne;
		capLum   : CaptLuminosite capLum.getPlace() == 'interieur' && capLum.getValue() < (consigne.lum - 25);
		volet    : Volet volet.getValue() < 100;
		capLumExt: CaptLuminosite capLumExt.getPlace() == 'exterieur' && capLumExt.getValue() > consigne.jourSuf;
	}
	then {
		modify(volet, volet.setUp());
		afficher("rule augLum2 : volet value = " + volet.getValue());
	}
}
rule dimLum1 {
	when {
		consigne: Consigne;
		capLum  : CaptLuminosite capLum.getPlace() == 'interieur' && capLum.getValue() > (consigne.lum + 25);
		lum     : Lumiere lum.getValue() > 0;
	}
	then {
		modify(lum, lum.setDown());
		afficher("rule dimLum1 : lum value = " + lum.getValue());
	}
}
rule dimLum2 {
	when {
		consigne: Consigne;
		capLum  : CaptLuminosite capLum.getPlace() == 'interieur' && capLum.getValue() > (consigne.lum + 25);
		lum     : Lumiere lum.getValue() == 0;
		volet   : Volet volet.getValue() > 0;
	}
	then {
		modify(volet, volet.setDown());
		afficher("rule dimLum2 : volet value = " + volet.getValue());
	}
}


//	==================================================================
//	Règles pour gérer le chauffage
//		->	augChauf1, augChauf2 et augChauf3 pour l'augmenter
//		->	dimChauf1 et dimChauf2 pour le diminuer
//	==================================================================

rule augChauf1 {
	when {
		consigne  : Consigne;
		capTemp   : CaptTemperature capTemp.getPlace() == 'interieur' && capTemp.getValue() < (consigne.temp - 1);
		volet     : Volet volet.getValue() < 100;
		capTempExt: CaptTemperature capTempExt.getPlace() == 'exterieur' && capTempExt.getValue() >= consigne.tempSuf;
		capLum    : CaptLuminosite capLum.getPlace() == 'exterieur' && capLum.getValue() >= consigne.lumSuf;
	}
	then {
		modify(volet, volet.setUp());
		afficher("rule augChauf1 : volet value = " + volet.getValue());
	}
}
rule augChauf2 {
	when {
		consigne: Consigne;
		chauf   : Chauffage;
		capTemp : CaptTemperature capTemp.getPlace() == 'interieur' && capTemp.getValue() < (consigne.temp - 1);
		volet   : Volet volet.getValue() < 100;
		or( capTempExt: CaptTemperature capTempExt.getPlace() == 'exterieur' && capTempExt.getValue() < consigne.tempSuf,
			capLum    : CaptLuminosite capLum.getPlace() == 'exterieur' && capLum.getValue() < consigne.lumSuf);
	} 
	then {
		modify(chauf, chauf.setUp());
		afficher("rule augChauf2 : chauf value = " + chauf.getValue());
	}
}
rule augChauf3 {
	when {
		consigne: Consigne;
		capTemp : CaptTemperature capTemp.getPlace() == 'interieur' && capTemp.getValue() < (consigne.temp - 1);
		volet   : Volet volet.getValue() == 100;
		chauf   : Chauffage;
	}
	then {
		afficher("rule augChauf3 : chauf value = " + chauf.getValue());
	}
}
rule dimChauf1 {
	when {
		consigne: Consigne;
		chauf   : Chauffage chauf.getValue() != 0;
		capTemp : CaptTemperature capTemp.getPlace() == 'interieur' && capTemp.getValue() > (consigne.temp + 1);
	}
	then {
		modify(chauf, chauf.setDown());
		afficher("rule dimChauf1 : chauf value = " + chauf.getValue());
	}
}

rule dimChauf2 {
	when {
		consigne  : Consigne;
		chauf     : Chauffage chauf.getValue() == 0;
		capTemp   : CaptTemperature capTemp.getPlace() == 'interieur' && capTemp.getValue() > (consigne.temp + 1);
		capLum    : CaptLuminosite capLum.getPlace() == 'exterieur' && capLum.getValue() > consigne.lumFort;
		volet     : Volet volet.getValue() != 0;
	}
	then {
		modify(volet, volet.setDown());
		afficher("rule dimChauf2 : volet value = " + volet.getValue());
	}
}


//	===================================================================
//	Règles pour gérer la VMC
//		->	augVMC pour augmenter la vitesse
//		->	dimVMC pour diminuer la vitesse
//	===================================================================
rule augVMC {
	when {
		consigne: Consigne;
		captCo2 : CaptCO2 captCo2.getValue() > (consigne.co2 + 5);
		vmc     : VMC vmc.getValue() != 2;
	}
	then {
		modify(vmc, vmc.setV2());
		afficher("rule augVMC : vmc value = " + vmc.getValue());
	}
}
rule dimVMC {
	when {
		consigne: Consigne;
		captCo2 : CaptCO2 captCo2.getValue() < (consigne.co2 - 5);
		vmc     : VMC vmc.getValue() != 1;
	}
	then {
		modify(vmc, vmc.setV1());
		afficher("rule dimVMC : vmc value = " + vmc.getValue());
	}
}